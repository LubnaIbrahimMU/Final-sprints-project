---
# tasks file for Ansible

#initialization

- name: Apt update
  apt:
    update_cache: yes

- name: Install packages
  apt:
    name:
      - openjdk-11-jdk
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - unzip
      - python3
      - jq

#install Docker 

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true

# - name: Install Docker Module for Python
#   pip:
#     name: docker

- name: Add  Ubuntu user to docker group
  user:
    name: "ubuntu"
    groups: ["docker"]
    append: yes
  tags:
    - docker

- name: check permission of  /var/run/docker.sock
  file: 
    path: /var/run/docker.sock
    mode: '0777'

# Configure Docker to run without sudo
# - name: Configure Docker to run without sudo
#   copy:
#     content: |
#       {
#         "userns-remap": "default"
#       }
#     dest: /etc/docker/daemon.json
#     mode: '0644'
#   notify: Restart Docker

#   handlers:
#   # Restart Docker service
#   - name: Restart Docker
#     systemd:
#       name: docker
#       state: restarted

#install jenkins 


- name: Install Java
  apt:
    name: openjdk-8-jdk
    state: present

- name: Add Jenkins repository key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    state: present

- name: Add Jenkins repository
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present

- name: Install Jenkins
  apt:
    name: jenkins
    state: present

- name: Start Jenkins service
  systemd:
    name: jenkins
    state: started
    enabled: yes


- name: Adding jenkins user  to group docker
  user:
    name: jenkins
    groups: ["docker"]
    append: yes

# print the password
- name: Display /var/lib/jenkins/secrets/initialAdminPassword contents
  command: cat /var/lib/jenkins/secrets/initialAdminPassword 
  register: command_output

- name: Print to password
  debug:
    msg: "the initial password = {{command_output.stdout}}"


#install aws cli + kubeconfig

#Install AWS cli
# - name: Install AWS cli url
#   shell: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

# - name: Unarchieve AWS-cli.zip
#   unarchive:
#     src: awscliv2.zip
#     dest: /home/ubuntu
#     remote_src: yes

# - name: Install AWS cli
#   shell: "./aws/install"

- name: apt-get update
  apt: update_cache=yes
    
- name: Install Python PIP
  apt: pkg=python3-pip state=latest

- name: Install boto via PIP
  pip: name=boto state=latest

- name: Install AWS CLI
  pip: name=awscli state=latest

- name: AWS | Assures dir exists
  file: path="/home/ubuntu/.aws" state=directory

- name: AWS | create credentials
  template:
    src: aws_credentials.tpl
    dest: "/home/ubuntu/.aws/credentials"
- name: AWS | create config
  template:
    src: config.tpl
    dest: "/home/ubuntu/.aws/config"
    
- name: add kubeconfig
  command: aws eks --region us-east-1 update-kubeconfig --name eks_cluster

# install kubectl 
- name: Make the Swap inactive
  command: swapoff -a


- name: install APT Transport HTTPS
  apt:
    name: apt-transport-https
    state: present

- name: add Kubernetes apt-key for APT repository
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add Kubernetes APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'

- name: install kubelet
  apt:
    name: kubelet
    state: present
    update_cache: true

- name: install kubeadm
  apt:
    name: kubeadm
    state: present
- name: Creating a daemon json
  copy:
    dest: "/etc/docker/daemon1.json"
    content: |
      {
      "exec-opts": ["native.cgroupdriver=systemd"]
      }
- name: restarting the docker
  ansible.builtin.shell: |
    systemctl daemon-reload
    systemctl restart docker
    systemctl restart kubelet

- name: install kubectl
  apt:
    name: kubectl
    state: present
    force: yes

- name: Print to password
  debug:
    msg: "the initial password = {{command_output.stdout}}"
